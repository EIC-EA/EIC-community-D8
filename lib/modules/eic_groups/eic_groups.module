<?php

/**
 * @file
 * Primary module hooks for EIC Groups module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\BubbleableMetadata;
use Drupal\eic_groups\Hooks\CronOperations;
use Drupal\eic_groups\Hooks\EntityOperations;
use Drupal\eic_groups\Hooks\GroupTokens;
use Drupal\eic_groups\Hooks\FormOperations;
use Drupal\eic_groups\Hooks\Pathauto;
use Drupal\eic_groups\Hooks\Preprocess;

/**
 * Implements hook_theme().
 */
function eic_groups_theme($existing, $type, $theme, $path) {
  return [
    'eic_group_header_block' => [
      'variables' => [
        'group' => NULL,
        'group_values' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function eic_groups_form_group_group_add_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  \Drupal::classResolver(FormOperations::class)
    ->groupGroupAddForm($form, $form_state);
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function eic_groups_group_insert(EntityInterface $entity) {
  \Drupal::classResolver(EntityOperations::class)
    ->groupInsert($entity);
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function eic_groups_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  \Drupal::classResolver(EntityOperations::class)
    ->nodeView($build, $entity, $display, $view_mode);
}

/**
 * Implements hook_form_alter().
 */
function eic_groups_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Hide book select list from wiki page forms.
  switch ($form_id) {
    case 'node_wiki_page_form':
    case 'node_wiki_page_edit_form':
      $form['book']['bid']['#access'] = FALSE;
      break;

  }
}

/**
 * Implements hook_preprocess_links__node().
 */
function eic_groups_preprocess_links__node(&$variables) {
  /** @var \Drupal\eic_groups\Hooks\Preprocess $class */
  $class = \Drupal::classResolver(Preprocess::class);
  $class->preprocessLinksNode($variables);
}

/**
 * Implements hook_token_info().
 */
function eic_groups_token_info() {
  /** @var \Drupal\eic_groups\Hooks\GroupTokens $class */
  $class = \Drupal::classResolver(GroupTokens::class);
  return $class->tokenInfo();
}

/**
 * Implements hook_tokens().
 */
function eic_groups_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  /** @var \Drupal\eic_groups\Hooks\GroupTokens $class */
  $class = \Drupal::classResolver(GroupTokens::class);
  return $class->tokens($type, $tokens, $data, $options, $bubbleable_metadata);
}

/**
 * Implements hook_group_update().
 */
function eic_groups_group_update(EntityInterface $entity) {
  \Drupal::classResolver(EntityOperations::class)
    ->groupUpdate($entity);
}

/**
 * Implements hook_pathauto_alias_alter().
 */
function eic_groups_pathauto_alias_alter(&$alias, array &$context) {
  /** @var \Drupal\eic_groups\Hooks\Pathauto $class */
  $class = \Drupal::classResolver(Pathauto::class);
  $class->aliasAlter($alias, $context);
}

/**
 * Implements hook_cron().
 */
function eic_groups_cron() {
  \Drupal::classResolver(CronOperations::class)
    ->cron();
}
