<?php

/**
 * @file
 * Module file for the Non require on Draft module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function eic_non_required_on_draft_form_field_config_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var \Drupal\field\FieldConfigInterface $field_config */
  $field_config = $form_state->getFormObject()->getEntity();

  /** @var \Drupal\Core\Entity\ContentEntityType $entity_type */
  $entity_type = \Drupal::entityTypeManager()->getDefinition($field_config->getTargetEntityTypeId());
  if (!_eic_non_required_on_draft_entity_is_publishable($entity_type->getClass())) {
    return;
  }

  $form['#attached']['library'][] = 'eic_non_required_on_draft/config-form';

  $form['eic_non_required_on_draft'] = [
    '#type' => 'checkbox',
    '#title' => t('Non required on Draft'),
    '#default_value' => $field_config->getThirdPartySetting('eic_non_required_on_draft', 'non_required_on_draft', FALSE),
    '#weight' => -4,
  ];

  $form['actions']['submit']['#submit'][] = 'eic_non_required_on_draft_field_config_submit';
}

/**
 * Submit handler for the form_field_config_edit form.
 */
function eic_non_required_on_draft_field_config_submit($form, FormStateInterface $form_state) {
  /** @var \Drupal\field\FieldConfigInterface $entity */
  $entity = $form_state->getFormObject()->getEntity();

  /** @var int $eic_non_required_on_draft */
  $eic_non_required_on_draft = $form_state->getValue('eic_non_required_on_draft');

  if ($eic_non_required_on_draft) {
    $entity->setThirdPartySetting('eic_non_required_on_draft', 'non_required_on_draft', $eic_non_required_on_draft);
  }
  else {
    $entity->unsetThirdPartySetting('eic_non_required_on_draft', 'non_required_on_draft');
  }

  $entity->save();
}

/**
 * Implements hook_entity_type_alter().
 */
function eic_non_required_on_draft_entity_type_alter(array &$entity_types) {
  foreach ($entity_types as $type => $entity_type) {
    if (_eic_non_required_on_draft_entity_is_publishable($entity_type->getClass())) {
      $entity_types[$type]->addConstraint('non_required_on_draft');
    }
  }
}

/**
 * Checks whether an entity type is publishable or not.
 *
 * @param string $entity_class
 *   The class name.
 *
 * @return bool
 *   Whether the entity can be published or not.
 */
function _eic_non_required_on_draft_entity_is_publishable($entity_class) {
  if (!(new ReflectionClass($entity_class))->implementsInterface('\Drupal\Core\Entity\EntityPublishedInterface')) {
    return FALSE;
  }

  return TRUE;
}
