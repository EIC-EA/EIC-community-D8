<?php

/**
 * @file
 * Primary module hooks for EIC Administration module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityFormInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_query_alter().
 */
function eic_admin_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() === 'admin_groups' && $view->current_display === 'page_admin_groups') {
    $current_user_roles = \Drupal::currentUser()->getRoles(TRUE);
    if (!in_array('sensitive', $current_user_roles, TRUE)) {
      /** @var \Drupal\views\Plugin\views\query\Sql $query */
      $group = count($query->where);

      while (isset($query->where[$group])) {
        $group++;
      }

      $definition = [
        'table' => 'oec_group_visibility',
        'field' => 'gid',
        'left_table' => 'groups_field_data',
        'left_field' => 'id',
      ];
      // Instantiates the join plugin.
      $join = \Drupal::service('plugin.manager.views.join')->createInstance('standard', $definition);
      // Adds the join relationship to the query.
      $query->addRelationship('oec_group_visibility', $join, 'oec_group_visibility');
      // Filters out the query by the selected group visibilities.
      $query->addWhere($group, 'oec_group_visibility.type', ['sensitive'], 'NOT IN');
    }
  }
}

/**
 * Implements template_preprocess_views_view_field().
 */
function eic_admin_preprocess_views_view_field(&$vars) {
  if ($vars['view']->id() == 'closed_requests' && $vars['field']->options['id'] == 'flag_id') {
    // Users without the 'administer flags' permissions cannot see the flag
    // label, so we add it manually here.
    /** @var \Drupal\flag\FlaggingInterface $flagging */
    $flagging = $vars['row']->_entity;
    $flag_label = $flagging->getFlag()->label();
    $vars['output'] = $flag_label;
    $vars['field']->last_render = $flag_label;
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function eic_admin_module_implements_alter(&$implementations, $hook) {
  if (\Drupal::service('module_handler')->moduleExists('oe_authentication')) {
    switch ($hook) {
      // OE Authentication module is removing some cancel methods.
      // Prevent this by removing this implementation.
      case 'user_cancel_methods_alter':
        unset($implementations['oe_authentication']);
        break;
    }
  }
}

/**
 * Implements hook_module_form_alter().
 */
function eic_admin_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $currentTheme = \Drupal::service('theme.manager')->getActiveTheme();
  $adminThemeName = \Drupal::config('system.theme')->get('admin');
  $form_object = $form_state->getFormObject();
  if (!$form_object instanceof EntityFormInterface) {
    return;
  }
  $entity = $form_object->getEntity();
  if ($entity->getEntityTypeId() == 'node' && $currentTheme->getName() == $adminThemeName) {
    $form['#attached']['library'][] = 'eic_admin/admin_ux';
  }
}
