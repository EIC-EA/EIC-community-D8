<?php

/**
 * @file
 * Primary module hooks for EIC Content module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\eic_content\Hooks\EntityOperations;
use Drupal\eic_content\Hooks\EntityOperationsContributor;
use Drupal\node\NodeInterface;

/**
 * Implements hook_theme().
 */
function eic_content_theme() {
  return [
    'eic_content_actions' => [
      'variables' => [
        'actions' => [],
        'user_activity_feed_link' => [],
        'title' => NULL,
        'description' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function eic_content_node_view(
  array &$build,
  EntityInterface $entity,
  EntityViewDisplayInterface $display,
  $view_mode
) {
  \Drupal::classResolver(EntityOperations::class)
    ->nodeView($build, $entity, $display, $view_mode);

  switch ($entity->bundle()) {
    case 'discussion':
    case 'video':
      \Drupal::classResolver(EntityOperationsContributor::class)
        ->nodeView($build, $entity, $display, $view_mode);
      break;

  }
}

/**
 * Implements hook_entity_presave().
 */
function eic_content_entity_presave(EntityInterface $entity) {
  if (FALSE === $entity instanceof NodeInterface) {
    return;
  }

  switch ($entity->bundle()) {
    case 'discussion':
    case 'video':
      \Drupal::classResolver(EntityOperationsContributor::class)
        ->nodePreSave($entity);
      break;

  }
}

/**
 * Implements hook_views_data().
 */
function eic_content_views_data() {
  $data['node_field_data']['content_metrics'] = [
    'title' => t('Content metrics'),
    'help' => t('Displays the content metrics.'),
    'field' => [
      'id' => 'content_metrics',
    ],
  ];

  return $data;
}

/**
 * Implements hook_metatags_attachments_alter().
 */
function eic_content_metatags_attachments_alter(array &$metatag_attachments) {
  $attachments = $metatag_attachments['#attached']['html_head'];
  if (!$attachments) {
    return;
  }

  $attachments = array_filter($attachments, function ($attachment) {
    [, $name] = $attachment;
    return strpos($name, 'og_image') !== FALSE;
  });

  if (!empty($attachments)) {
    return;
  }

  $default_image_path = \Drupal::service('extension.path.resolver')
      ->getPath('theme', 'eic_community') . '/EIC_community.png';
  // No og_image is provided, add a default one
  $metatag_attachments['#attached']['html_head'][] = [
    [
      '#tag' => 'meta',
      '#attributes' => [
        'property' => 'og:image',
        'content' => Url::fromUserInput("/$default_image_path", ['absolute' => TRUE])->toString(),
      ],
    ],
    'og_image_0',
  ];
}

/**
 * Implements hook_form_alter().
 */
function eic_content_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Disable html5 form validation.
  $form['#attributes']['novalidate'] = 'novalidate';
}
