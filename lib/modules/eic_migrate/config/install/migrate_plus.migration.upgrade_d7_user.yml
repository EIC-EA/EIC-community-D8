langcode: en
status: true
dependencies: {  }
id: upgrade_d7_user
class: Drupal\user\Plugin\migrate\User
field_plugin_method: null
cck_plugin_method: null
migration_tags:
  - 'Drupal 7'
  - Content
migration_group: migrate_drupal_7
label: 'User accounts'
source:
  plugin: d7_user
  track_changes: true
process:
  # Ignore User ID so migration updates can be ran
#  uid:
#    - plugin: get
#      source: uid
  name:
    - plugin: get
      source: name
  pass:
    - plugin: get
      source: pass
  mail:
    - plugin: get
      source: mail
  created:
    - plugin: get
      source: created
  access:
    - plugin: get
      source: access
  login:
    - plugin: get
      source: login
  status:
    - plugin: get
      source: status
  timezone:
    - plugin: get
      source: timezone
  langcode:
    - plugin: user_langcode
      source: entity_language
      fallback_to_site_default: false
  preferred_langcode:
    - plugin: user_langcode
      source: language
      fallback_to_site_default: true
  preferred_admin_langcode:
    - plugin: user_langcode
      source: language
      fallback_to_site_default: true
  init:
    - plugin: get
      source: init
  roles:
    - plugin: static_map
      source: roles
      map:
        1: anonymous
        2: authenticated
        3: piwik_admin # TODO: This role is not in D9
        4: service_authentication
        5: administrator
        6: content_administrator
  # No content in D7. Ignore picture
#  user_picture:
#    - plugin: default_value
#      source: picture
#      default_value: null
#    - plugin: migration_lookup
#      migration: upgrade_d7_file
  field_first_name:
    - plugin: get
      source: c4m_first_name
  field_is_deleted:
    - plugin: get
      source: c4m_is_deleted
  field_is_deleted_anonymous:
    - plugin: get
      source: c4m_is_deleted_anonymous
  # TODO: Use migration_lookup
  field_is_deleted_by_uid:
    - plugin: migration_lookup
      source: c4m_is_deleted_by_uid
      migration:
        - upgrade_d7_user
#    - plugin: get
#      source: c4m_is_deleted_by_uid
  field_is_invalid_email:
    - plugin: get
      source: c4m_is_invalid_email
  field_is_organisation_user:
    - plugin: get
      source: c4m_is_organisation_user
  field_is_spammer:
    - plugin: get
      source: c4m_is_spammer
  field_last_name:
    - plugin: get
      source: c4m_last_name
  # TODO: Implement after files and media migrations are finished.
#  field_media:
#    - plugin: sub_process
#      source: c4m_media
#      process:
#        target_id: fid
#        alt: alt
#        title: title
#        width: width
#        height: height
  # TODO: Is this field correctly mapped to D9?
  field_smed_id:
    - plugin: get
      source: c4m_user_dashboard_id
  field_message_from_service:
    - plugin: get
      source: c4m_message_from_service
  field_updated_profile_by_service:
    - plugin: sub_process
      source: c4m_updated_profile_by_service
      process:
        value:
          plugin: format_date
          from_format: U
          to_format: U
          source: value
  field_updated_profile_by_user:
    - plugin: sub_process
      source: c4m_updated_profile_by_user
      process:
        value:
          plugin: format_date
          from_format: U
          to_format: U
          source: value
  # TODO: What are the allowed values in this List (text) field?
#  c4m_user_status:
#    - plugin: get
#      source: c4m_user_status
  # TODO: Planning
#  og_user_node:
#    - plugin: get
#      source: og_user_node
  # TODO: Planning
#  c4m_unsubscribe_hash:
#    - plugin: get
#      source: c4m_unsubscribe_hash
  # TODO: Planning
#  c4m_optout_comment:
#    - plugin: get
#      source: c4m_optout_comment
  # TODO: Planning
#  c4m_optout_group:
#    - plugin: get
#      source: c4m_optout_group
  # TODO: Planning
#  c4m_optout_node:
#    - plugin: get
#      source: c4m_optout_node
  # TODO: Planning
#  c4m_optout_taxonomy_term:
#    - plugin: get
#      source: c4m_optout_taxonomy_term
  # TODO: Does this module exist in D7?
#  field_metatag:
#    - plugin: d7_metatag_entities
#      source: pseudo_metatag_entities
destination:
  plugin: 'entity:user'
migration_dependencies:
  required: { }
  optional: { }
