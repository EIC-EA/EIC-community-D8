<?php

/**
 * @file
 * Prepares variables for node Event templates.
 */

/**
 * Implements hook_preprocess_node__event() for event node.
 */
function eic_community_preprocess_node__event(array &$variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];

  switch ($variables['view_mode']) {
    case 'teaser':
      $teaser = _eic_community_prepare_node_teaser_array($node);

      // Get the start date of the event.
      $start_date = 0;
      if (!$node->field_date_range->isEmpty()) {
        $start_date = strtotime($node->get('field_date_range')->value);
      }
      $teaser['date'] = _eic_community_preprocess_ecl_date_block($start_date);
      $teaser['timestamp']['label'] = eic_community_get_teaser_time_display($node->get('published_at')->value);

      // Get the event state.
      $teaser['date']['variant'] = _eic_community_get_ecl_date_block_variant($node, 'field_date_range');

      // Get the event type.
      $event_type_label = '';
      if (!$node->field_vocab_event_type->isEmpty()) {
        /** @var \Drupal\taxonomy\Entity\Term $event_type */
        $event_type = $node->get('field_vocab_event_type')->entity;
        $event_type_label = $event_type->get('name')->getString();
      }
      $teaser['type'] = [
        'label' => $event_type_label,
        'icon' => [
          'name' => $node->bundle(),
          'type' => 'custom',
        ],
      ];

      // Remove unwanted items.
      $teaser['flags'] = [];
      $teaser['stats'] = [];

      // If we have flags, attach the js library.
      if (!empty($teaser['flags'])) {
        $variables['#attached']['library'][] = 'flag/flag.link_ajax';
      }

      $variables['event_item'] = $teaser;
      break;

  }

}
