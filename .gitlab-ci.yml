stages:
  - build
  - test
  - notify
  - deploy
  - cypress
  - deploy_uat

.deploy_job: &deploy_job
  image: intractosre/deploy:1
  stage: deploy
  tags:
    - aws
  before_script:
    - eval $(ssh-agent -s)
    - echo "$DEPLOYMENT_SSH_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa -p $SSH_PORT $HOST >> ~/.ssh/known_hosts
  script:
    - rsync -e "ssh -p $SSH_PORT" -avuz --no-perms --omit-dir-times --exclude-from=.rsyncignore --delete --delete-after $CI_PROJECT_DIR/ $PROJECT_USER@$HOST:$PROJECT_DIR
    - >
      ssh -p $SSH_PORT $PROJECT_USER@$HOST "source /.victhorious/conf/shell/envvars && cd $PROJECT_DIR &&
      ln -sf ../../lib/modules $PROJECT_DIR/web/modules/custom &&
      ln -sf ../../lib/themes $PROJECT_DIR/web/themes/custom &&
      ln -sf ../../lib/profiles $PROJECT_DIR/web/profiles/custom &&
      ln -sf $PROJECT_DIR/web $PROJECT_DIR/web/community &&
      chown -R $PROJECT_USER:$PROJECT_GROUP $PROJECT_DIR &&
      ./vendor/bin/drush updb -y &&
      ./vendor/bin/drush cr &&
      ./vendor/bin/drush cim -y &&
      ./vendor/bin/drush cr"

.rollback_trigger_updb: &rollback_trigger_updb
  image: intractosre/deploy:1
  stage: deploy
  when: manual
  tags:
    - aws
  before_script:
    - eval $(ssh-agent -s)
    - echo "$DEPLOYMENT_SSH_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa -p $SSH_PORT $HOST >> ~/.ssh/known_hosts
  script:
    - >
      ssh -p $SSH_PORT $PROJECT_USER@$HOST "source /.victhorious/conf/shell/envvars && cd $PROJECT_DIR &&
      ./vendor/bin/drush php-eval \"echo drupal_set_installed_schema_version('eic_deploy', $UPDB_VERSION);\" &&
      ./vendor/bin/drush updb -y &&
      ./vendor/bin/drush cim -y &&
      ./vendor/bin/drush cr"

build_backend:
  stage: build
  image: public.ecr.aws/h5g0v9w1/php-fpm:7.4
  artifacts:
    untracked: true
    expire_in: '2 hour'
  script:
    - composer --no-ansi --no-interaction install --no-progress --prefer-dist --optimize-autoloader
    # Gitlab CI will exclude any directory containing a .git folder from artifacts, remove it temporarily
    - find $CI_PROJECT_DIR/web/modules/contrib -type d -name ".git" -exec rm -rf {} +
    - find $CI_PROJECT_DIR/vendor -type d -name ".git" -exec rm -rf {} +
  only:
    - /^release/.*$/
    - develop

build_front:
  stage: build
  image: node:14
  artifacts:
    untracked: true
    expire_in: '2 hour'
  script:
    - cd lib/themes/eic_community
    - npm install && npm run build && npm run react-production
    - npm run pregenerate-storybook && npm run generate-storybook && npm run postgenerate-storybook
    - cd node_modules && find . -mindepth 1 -maxdepth 1 -type d ! -name "@ecl*" -exec rm -rf {} +
  only:
    - /^release/.*$/
    - develop

security_check:
  stage: test
  image: jakzal/phpqa:php7.4
  script:
    - local-php-security-checker
  only:
    - develop
    - /^release/.*$/

sbom_send:
  image: public.ecr.aws/io-brussels/sbom-collector
  artifacts:
    paths:
      - $CI_PROJECT_DIR/bom.xml
    expire_in: 2 hours
  script:
    - cd $CI_PROJECT_DIR && composer -n make-bom --output-file=$CI_PROJECT_DIR/bom.xml
    - cat $CI_PROJECT_DIR/bom.xml | send_bom
  only:
    - develop
    - /^release/.*$/

deploy_develop:
  <<: *deploy_job
  stage: deploy
  variables:
    HOST: $DEVELOP_HOST
  only:
    - develop

deploy_qa:
  <<: *deploy_job
  stage: deploy
  variables:
    HOST: $QA_HOST
  only:
    - /^release/.*$/

deploy_uat:
  <<: *deploy_job
  stage: deploy_uat
  when: manual
  variables:
    HOST: $UAT_HOST
  only:
    - /^release/.*$/

deploy_migration_env:
  <<: *deploy_job
  stage: deploy_uat
  variables:
    HOST: $MIGRATION_HOST
  only:
    - /^release/.*$/

rollback_trigger_updb_develop:
  <<: *rollback_trigger_updb
  variables:
    HOST: $DEVELOP_HOST
  only:
    - develop

rollback_trigger_updb_qa:
  <<: *rollback_trigger_updb
  variables:
    HOST: $QA_HOST
  only:
    - /^release/.*$/

rollback_trigger_updb_uat:
  <<: *rollback_trigger_updb
  variables:
    HOST: $UAT_HOST
  only:
    - /^release/.*$/

slack_notifier:
  stage: notify
  image: curlimages/curl:latest
  script:
    - |
      curl -X POST $SLACK_URL -H 'Content-Type: application/json' -d '{"text": "New deployment running on QA. Environment will be updated in a few minutes..."}'
  only:
    - /^release/.*$/

cypress_test_qa:
  stage: cypress
  image: cypress/base:10
  allow_failure: true
  artifacts:
    when: always
    untracked: true
    expire_in: '2 hour'
  script:
    - cd e2e
    - npm install
    - npx cypress run
  only:
    - /^release/.*$/
